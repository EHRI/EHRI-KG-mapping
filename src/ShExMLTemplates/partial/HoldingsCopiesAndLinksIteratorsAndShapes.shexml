ITERATOR copies_and_links_iterator <jsonpath: $.data.documentaryUnits.items[*]> {
    PUSHED_FIELD unit_id <id>
    ITERATOR links <links[*]> {
        ITERATOR loc_org <[?(@.field=='locationOfOriginals')]> {
            FIELD description <description>
            ITERATOR targets <targets[*]> {
                POPPED_FIELD subject_id <unit_id>
                FIELD target_id <id>
                FIELD type <type>
            }
        }
        ITERATOR loc_cop <[?(@.field=='locationOfCopies')]> {
            FIELD description <description>
            ITERATOR targets <targets[*]> {
                POPPED_FIELD subject_id <unit_id>
                FIELD target_id <id>
                FIELD type <type>
            }
        }
        ITERATOR creators <[?(@.body[0].type=='creator')]> {
            FIELD unit_id <targets[?(@.type=='DocumentaryUnit')].id>
            FIELD cb_id <targets[?(@.type=='HistoricalAgent')].id> 
        }
    }
}

EXPRESSION item <links_files.copies_and_links_iterator>

# In these links it is not possible to put the description unless we reify the data model, TBD.

# Subject documentary unit
ehri:HoldingLocationOfOriginals ehri_units:[item.unit_id IF validators.isDocumentaryUnit(item.links.loc_org.targets.subject_id, item.links.loc_org.targets.target_id, item.links.loc_org.targets.type)] {
    # The object is a documentary unit
    ehri:isCopyOf ehri_units:[item.links.loc_org.targets.target_id IF validators.isObjectDocumentaryUnit(item.links.loc_org.targets.subject_id, item.links.loc_org.targets.target_id, item.links.loc_org.targets.type)] ;
    # The object is an institution
    ehri:isCopyOf ehri_institution:[item.links.loc_org.targets.target_id IF validators.isObjectInstitution(item.links.loc_org.targets.subject_id, item.links.loc_org.targets.target_id, item.links.loc_org.targets.type)] ;
}

ehri:HoldingLocationOfCopies ehri_units:[item.unit_id IF validators.isDocumentaryUnit(item.links.loc_cop.targets.subject_id, item.links.loc_cop.targets.target_id, item.links.loc_cop.targets.type)] {
    # The object is a documentary unit
    ehri:hasCopy ehri_units:[item.links.loc_cop.targets.target_id IF validators.isObjectDocumentaryUnit(item.links.loc_cop.targets.subject_id, item.links.loc_cop.targets.target_id, item.links.loc_cop.targets.type)] ;
    # The object is an institution
    ehri:hasCopy ehri_institution:[item.links.loc_cop.targets.target_id IF validators.isObjectInstitution(item.links.loc_cop.targets.subject_id, item.links.loc_cop.targets.target_id, item.links.loc_cop.targets.type)] ;
}

ehri:HoldingLocationOfOriginalsInverse ehri_units:[item.links.loc_org.targets.target_id] {
    ehri:hasCopy ehri_units:[item.links.loc_org.targets.subject_id IF validators.isObjectDocumentaryUnit(item.links.loc_org.targets.subject_id, item.links.loc_org.targets.target_id, item.links.loc_org.targets.type)] ;
}

ehri:HoldingLocationOfOriginalsInverseInstitutionSubject ehri_institution:[item.links.loc_org.targets.target_id IF validators.isObjectInstitution(item.links.loc_org.targets.subject_id, item.links.loc_org.targets.target_id, item.links.loc_org.targets.type)] { 
    ehri:hasCopy ehri_units:[item.links.loc_org.targets.subject_id] ;
}    

ehri:HoldingLocationOfCopiesInverse ehri_units:[item.links.loc_cop.targets.target_id] {
    ehri:isCopyOf ehri_units:[item.links.loc_cop.targets.subject_id IF validators.isObjectDocumentaryUnit(item.links.loc_cop.targets.subject_id, item.links.loc_cop.targets.target_id, item.links.loc_cop.targets.type)] ;
}

ehri:HoldingLocationOfCopiesInverseInstitutionSubject ehri_institution:[item.links.loc_cop.targets.target_id IF validators.isObjectInstitution(item.links.loc_cop.targets.subject_id, item.links.loc_cop.targets.target_id, item.links.loc_cop.targets.type)] { 
    ehri:isCopyOf ehri_units:[item.links.loc_cop.targets.subject_id] ;
} 

#Creator
ehri:HoldingCreator ehri_units:[item.links.creators.unit_id] {
    rico:hasCreator ehri_cb:[transformers.removeCBPrefix(item.links.creators.cb_id) IF validators.hasCBPrefix(item.links.creators.cb_id)] ; # Apparently only CBs are returned in creator links, but this could be expanded if need be.
}

ehri:HoldingCreatorInverse ehri_cb:[transformers.removeCBPrefix(item.links.creators.cb_id) IF validators.hasCBPrefix(item.links.creators.cb_id)] {
    rico:isCreatorOf ehri_units:[item.links.creators.unit_id] ; # Apparently only CBs are returned in creator links, but this could be expanded if need be.
}

